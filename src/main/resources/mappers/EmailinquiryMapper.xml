<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="EmailinquiryMapper">

    <!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
    <resultMap id="emailinquiryMap"
        type="com.project.laporte.model.Email_inquiry">
        <!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
        <result property="emailno" column="emailno" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="category" column="category" />
        <result property="file" column="file" />
        <result property="content" column="content" />
        <result property="status" column="status" />
        <result property="answer" column="answer" />
        <result property="regdate" column="regdate" />
        <result property="editdate" column="editdate" />
    </resultMap>
	
	<!-- 새로운 이메일 문의 저장을 위한 기능 정의  -->
	<insert id="insertEmailInquiry"
	parameterType="com.project.laporte.model.Email_inquiry"
	useGeneratedKeys="true" keyProperty="emailno">
		INSERT INTO email_inquiry(name, email, category, file, content, status, answer, regdate, editdate)
		VALUES(#{name}, #{email}, #{category}, #{file}, #{content}, 'W', NULL, now(), now())
	</insert>
        
	<!-- 단일 이메일 문의 조회를 위한 기능 정의 -->
    <select id="selectEmailInquiry"
        parameterType="com.project.laporte.model.Email_inquiry"
        resultMap="emailinquiryMap">
        SELECT emailno, name, email, category, file, content, status, answer, regdate 
        FROM email_inquiry
        WHERE emailno = #{emailno}
    </select>
    
    <!-- 이메일 문의 리스트 조회를 위한 기능 정의 -->
	 <select id="selectEmailInquiryList"
        parameterType="com.project.laporte.model.Email_inquiry"
        resultMap="emailinquiryMap">
         SELECT emailno, name, email, category, file, content, status, answer, regdate 
        FROM email_inquiry
        
           <where>
        	<if test= "category != '' and category != null">
        		category = #{category} 
        	</if>
        	
        	<if test= "category != '' and category != null and status != '' and status != null">
        		AND 
        	</if>
        	
        	<if test= "status != '' and status != null">
        		status = #{status} 
        	</if> 
        </where>
        
      </select>
	
	<!-- 이메일 문의 답변 업데이트를 위한 기능 정의 -->
	<update id="answerEmailInquiry"
	 parameterType="com.project.laporte.model.Email_inquiry">
	 	UPDATE email_inquiry SET
	 	status = 'A',
	 	answer = #{answer},
	 	editdate = now()
	 	WHERE emailno = #{emailno} 	
	</update>
	
</mapper>