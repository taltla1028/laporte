<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org./dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="ReserveMapper">
	<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다.-->
	<resultMap id="reserveMap"
		type="com.project.laporte.model.Reserve">
		<result property="reserveno" column="reserno" />
		<result property="showroom" column="showroom" />
		<result property="date" column="date" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phoneno" column="phoneno"/>
		<result property="time" column="time" />
		<result property="area" column="area" />
		<result property="request" column="request" />
		<result property="status" column="status" />
		<result property="userno" column="userno" />
		<result property="regdate" column="regdate" />
		<result property="editdate" column="editdate" />
	</resultMap>
	
	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem" parameterType="com.project.laporte.model.Reserve" useGeneratedKeys="true" keyProperty="reserveno">
	INSERT INTO reserve (
		showroom, date, name, email, phoneno, time, area, request,status , userno, regdate, editdate
		)VALUES(
	#{showroom}, #{date}, #{name}, #{email}, #{phoneno}, #{time}, #{area}, #{request}, 'W', #{userno}, now(), now()
	 )
	</insert>
	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem" parameterType="com.project.laporte.model.Reserve">
	UPDATE reserve SET
		date=#{date}, showroom=#{showroom}, time=#{time}, area=#{area}, request=#{request}, editdate=now() WHERE reserno=#{reserveno}
	</update>
	<!-- 데이터 삭제를 위한 기능 정의 -->
	<update id="deleteItem" parameterType="com.project.laporte.model.Reserve">
	UPDATE reserve SET
		status='CC', editdate=now() WHERE reserno=#{reserveno}
	</update>
	<!-- 예약 확인을 위한 기능 정의 -->
	<update id="okitem" parameterType="com.project.laporte.model.Reserve">
	UPDATE reserve SET
	status='CF', editdate=now() WHERE reserno=#{reserveno}
	</update>
	<!-- 단일행 조회를 위한 기능 정의 -->
	
	<select id="selectItem" parameterType="com.project.laporte.model.Reserve" resultMap="reserveMap">
		SELECT userno, status, reserno,name, DATE_FORMAT(date, '%Y-%m-%d') AS date, time, area, request FROM reserve WHERE reserno = #{reserveno};
	</select>
	
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList" parameterType="com.project.laporte.model.Reserve" resultMap="reserveMap">
		SELECT userno, status, reserno, showroom, DATE_FORMAT(date, '%Y-%m-%d') AS date, name, email, phoneno, time, area FROM reserve WHERE userno=#{userno}; 
	</select>
	
	
	<!-- 관리자 예약페이지 다중행 조회 기능 정의  -->
	<select id="reserveList" parameterType="com.project.laporte.model.Reserve" resultMap="reserveMap">
		
		SELECT * FROM reserve
		
	</select>
	
	
	<!--마이페이지에서 회원 예약 건 확인  -->
	<select id="checkReserve" parameterType="com.project.laporte.model.Reserve" resultType="int">
		SELECT COUNT(*) FROM reserve WHERE userno = #{userno}
	</select>
	
	<!-- 회원 삭제 시 회원 번호 null로 업데이트 -->
    <update id = "unsetUsernoResv"
    	parameterType = "com.project.laporte.model.User">
    	UPDATE reserve SET userno = null WHERE userno = #{userno} 
    </update>
	
	</mapper>